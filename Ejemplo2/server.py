from http.server import BaseHTTPRequestHandler, HTTPServer
import os
import urllib.parse

class FileServerHandler(BaseHTTPRequestHandler):
    root_dir = os.path.abspath(".")
    
    def do_GET(self):

        path = urllib.parse.unquote(self.path[1:])
        

        abs_path = os.path.abspath(os.path.join(self.root_dir, path))
        

        if not abs_path.startswith(self.root_dir):
            self.send_error(403, "Acceso denegado.")
            return

        if os.path.isdir(abs_path):
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            self.wfile.write(f"<html><head><title>{path}</title></head><body>".encode())
            self.wfile.write(f"<h1>Archivos en {path}:</h1><ul>".encode())
            for file in os.listdir(abs_path):
                full_path = os.path.join(path, file)
                self.wfile.write(f"<li><a href='/{urllib.parse.quote(full_path)}'>{file}</a></li>".encode())
            self.wfile.write("</ul></body></html>".encode())
        elif os.path.isfile(abs_path):
            self.send_response(200)
            self.send_header('Content-type', 'text/plain; charset=utf-8')
            self.end_headers()
            with open(abs_path, 'r', encoding='utf-8') as file:
                self.wfile.write(file.read().encode())
        else:

            self.send_error(404, 'Archivo no encontrado.')

def run(server_class=HTTPServer, handler_class=FileServerHandler, port=8080):
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)
    print(f'Servidor iniciado en http://localhost:{port}')
    httpd.serve_forever()

if __name__ == '__main__':
    run()